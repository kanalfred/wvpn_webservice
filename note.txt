 
 AccountUpdate - duplication superman in group
 AccountUpdate - Todo: it empty group - delete group from user group table   *DONE



// Curl Command
--------------------------

Curl Options:
    -k    bypass SSL verfiy/ insecure SSL
    -s    Silent 
    -u    User:Password
    -H    Header
    -X    Http method
    -d    Post data

// Create
curl -k -s -u 'watervpn:landmark5!' -H "Content-Type: application/json" -X POST -d '{"passwd":"afasd","id":"superman","groups":["pro"],"status":"1"}' http://api.dev.alfredkan.com/radius/account

// Update
curl -k -s -u 'watervpn:landmark5!' -H "Content-Type: application/json" -X PUT -d '{"passwd":"afasd","groups":["pro"],"status":"1"}' http://api.dev.alfredkan.com/radius/account/superman2

// fetch
curl -k -s -u 'watervpn:landmark5!' -H "Content-Types: application/json" http://api.dev.alfredkan.com/radius/account/superman | python -m json.tool

// fetch all
curl -k -s -u 'watervpn:landmark5!' -H "Content-Types: application/json" http://api.dev.alfredkan.com/radius/account | python -m json.tool

// delete
curl -k -s -u 'watervpn:landmark5!' -H "Content-Types: application/json" -X DELETE http://api.dev.alfredkan.com/radius/account/superman | python -m json.tool


// Openvpn getconfigconfig
curl -k -s -u 'watervpn:landmark5!' -H "Content-Type: application/json" -X POST -d '{"account":"client15","server":"ca3"}' http://api-test.dev.alfredkan.com/openvpn/getClientConfig


// Install or Deploy Setup
--------------------------

// Clone from git
// cd to httpdocs
    clone -b dev git@git.watervpn.com:root/radius-webservice.git

// Download Compposer
    curl -sS https://getcomposer.org/installer | php

// Install Zend dependency
// cd path/to/install
    composer.phar install   (provide github login)

// Remove apigility data/cache

// Change to right permission

// check absolute path in
    config/autoload/local.php
    config/autoload/global.php
    config/application.config.php (config_glob_paths)

// Enable development to access admin UI
    php public/index.php development enable

// Add DB adapters 
    copy config/autoload/local.php
    config/autoload/local.php
    Name: Db\Radius_test
    Drive: PDO_Mysql
    db: ws_radius
    utf8


// TODO:
// Code Refactor
// example 
/var/www/vhosts/dev/api/httpdocs/vendor/zfcampus/zf-apigility-admin/src/Model/ContentNegotiationResource.php
Controller:

Resource:
Handle restful request, using Model and throw restfull "api problem"

Model:
Busince Logic, (fetch, fetchAll, create, delete and Extra operation)
    pass in mapper throw constrctor
    hard code new entity (Entity never change for model)
    worker can be include in the Model
    create(array checkData)
    update($id, array checkData)
    // use static cache form entity
    example
            $id = '2';
            $check = checkModel->fetch( $id );
            $check = checkModel->create( $id, $name, $pass );
            $check = checkModel->update($id, $name, $pass);
            $check = checkModel->delete($id)
             checkModel->enableUser( $id )
    Extends resource interface (fetch,create, update, delete)
    Todo:
        Create Model for all entity & mappers
        //Remove AccountMapper.php and have Account Model handel
        AccountMapper should only user other mapper and not apps
        Model should use other sub model
    new todo:
        add respondent interface
        Model extend Entity
        respondent for resource


Mapper:
Handle data mapping between entity and database depends on db adapter
    pass in db adapter and entity

Entity:
    Contain entity or object properities only, all extra object operation goes to Model
    Alow magic __get & __set, override getter and setter if nessary

Worker:
    Is an Action process that involve mutiple Models and logic in between
    The name should be action instead of nonu
    Static getInstance - singlton

Util:
    S

// Name convation
remove entity or mapper end of the file name

// TODO:
Remove entity or mapper end of the file name
Create mapper
entity __get & __set in abstract layer

//Bug
httpdocs/vendor/zfcampus/zf-mvc-auth/src/Authentication/HttpAdapter.php
line 121
authentication()

 //Authentication
 refer: https://apigility.org/documentation/modules/zf-mvc-auth
 deny_by_default toggles the default behavior for the 
 line: 215
 /var/www/vhosts/dev/api/httpdocs/vendor/zfcampus/zf-mvc-auth/config/module.config.php

// Ras
---------------------------

Gen ras (account)

ras->get(account);
database 
id, account, ras_key, modifyTime

Gen openvpn 
openvpn->($server, $account, $downloadable=false, $reset)
        check if account exist
        //filename  server-account-serial.opvn
return filetype, size, body, serial
  look for tmp for file first and call ws  & expire after month
  filemtime set day file cache time in config in wvpnClient
  Util for downloadable
database
id, filename, fileContent, 

// opvn service
$openvpn->getRas( $account );

$openvpn = WvpnClient\WebService::getServiceClient( 'openvpn' );
$openvpn->setConnectionFileParams( $account, $key, $value );
$openvpn->getCleintConfig( $server, $account, downloadable=false );
$openvpn->getCleintConfig( 'ca1', 'xawysfa', downloadable=false );
$openvpn->


// opvn set params 
set per user, and which default for all location

// opvn dyname config file
  options will override all params in database, and we don't need to save the overide optons (is temp)
$openvpn->getConfigConfig( $server, $account, $option = array('remote'=>'abc', limit => '200') )

getClientConfig

$openvpn->getServers();
$openvpn->getServer( $serverName );

// can call be cron job or user want to refesh
// this fetchserverinfo job is mutip process
$openvpn->fetchServerInfo();

// pcnti-fork
// __CLASS__, __FUCTION__
exec( forkScript, classname, method );
database
id, message, status, exception

// Cache
//https://apigility.org/documentation/modules/zf-http-cache

// Entity
// create db schema
database webservice
// vpn server list
vpn_server (index: name, location, status)
    // name: us1, us2, us3
    // location us
    id, server_name, ip, location, status, capisabit, info
opvn_client_parms
note: delete all params after build config & remove updated
    account, server-name, parm, value, modified, updated
    new 2 version;
    account, server-name, parms (array(key,value))[json] modified, updated 
    account name :defaul_confg, server-name: ca1,  parm: url, value: ca1.watervpn.com
    account name :defaul_confg, parm: url, value: ca1.watervpn.com
    account name :temp_confg, parm: url, value: ca1.watervpn.com
    account, parms, modified, updated
    ex: remote-url = ca1.watervpn.com
// when ws call this echo fileContent
opvn_client_config   // connection file
    id, account, server_name, filename, fileContent, modifyTime
ras_client_key
    id, account, ras_crt, ras_key, modifyTime


// openvpn client cert gen
Require easyRsa
1) sudo yum -y install easy-rsa
2) mkdir -p /etc/openvpn/easy-rsa/keys
3) cp -rf /usr/share/easy-rsa/2.0/* /etc/openvpn/easy-rsa
4) copy ca keys
5) edit /etc/openvpn/easy-rsa/var point the ca path
// to generate
source ./vars
./build-key --batch clientName
check keys dir for generate key
check last output "Data Base Updated"


// Server Info
remote ssh  /etc/openvpn/openvpn-status.log
test speed
bandwidth- vnstat -l -i eth0
http://www.codejungle.org/site/Realtime+bandwidth+meter+with+php+and+jquery.html
compare 1 second different
/sys/class/net/$interface_name/statistics/rx_bytes and tx_bytes

// Graph
Grafana.org

// Openvpn import profile from access server
curl -k -u 'alfred:pass' https://vpn.alfredkan.com:943/rest/GetUserlogin
//https://docs.openvpn.net/docs/access-server/openvpn-access-server-command-line-tools.html

// radius account short hast
http://www.sitepoint.com/building-your-own-url-shortener/
http://hashids.org/php/
https://github.com/ivanakimov/hashids.php

// Service manager
http://stackoverflow.com/questions/16875194/getting-the-service-locator-anywhere-in-zf2
https://github.com/fezfez/ServiceLocatorFactory
// sm mapper
http://stackoverflow.com/questions/14021870/zf2-how-to-get-service-manager-in-mapper
http://stackoverflow.com/questions/18961988/how-to-get-an-instance-of-servicemanager-into-a-model-in-zf2

// unit test
http://devblog.x2k.co.uk/getting-phpunit-working-with-a-zend-framework-2-mvc-application/
https://samsonasik.wordpress.com/2013/11/19/zendframework-2-centralize-phpunit-test/

// google drive centos sync
https://timothy-quinn.com/backing-up-linux-server-files-to-google-drive/
https://github.com/prasmussen/gdrive

// Server Info
$openvpn->getServerInfo( $serverName = 'all', $region, $latest, $sortBy = 'region,server');

    // Entity & mapper
    ServerInfo(region[ca], server[ca1], vpnUsers, bandwidth, status[can't get reply from server], cpu, memory, info[store json format])
    // Model
    ServerInfo->getInfo( $fresh );
        - Check is within last 5 mins
        - Check if data in db
        - Fetch remote server info
    // Util
    getServerInfo [script]
    Process( $cmd[command to exec] )

 // Server Status (new)
     // Entity 
            serverStatus
     // Mapper 
            getAll();
            getStatusByServerName()
            getStatusByRegion()
            getStatusByCity()
            // for mutliProcess to know what available server names to fetch
            getServerNames();
     // Model
            PullServerStatus
            fetchServerStatus( $serverName );
            fetchAllServerStatus();
     // Util
            // from base/lib
            // use Cmd & remote in stand alone script file
            Cmd( $cmd ) [use RAS key]
                user
                host
                run();
            RemoteCmd [inhert Cmd class]
            processScript [PullVpnServerStatusProcess] (extend Process interface)
                $cmd = new RemoteCmd('ls status log');
                $cmd->setHost('ca1'.$watervpnDomain)
                run(){
                    $status = $cmd->run()
                    $serverStatus->setStatus($status);
                    $mapper->save($serverstatus);
                }
            SingleProcess // ProcessInterface
                $multprocess = new Mutliprocess();
                foreach($servers as $server){
                    $process = new PullVpnServerStatusProcess($host, $user);
                    $MutliProcess->add($process);
                }
                $process->run();
                function run(){
                    
                }
            // MutlProcess call 
            // Process passing script file
            MutliProcesseses
                $MutliProcesses->add($process1);
                $MutliProcesses->add($process2);
                $Mutliprocesses->run();
                run(){
                    // getAllProcesses();
                    exec( forkScript + self, classname, method );
                }
            ForkScript (accept Mutliprocesses obj)
                foreach($Mutliprocesses as $pcocess){
                    $pid = pcntl_fork();
                }
     // Worker
            // call by webservice & cron
            PullServerStatus::run( $serverName = 'all' ){
            FetchServerStatus::run( $serverName = 'all' ){
                $serverNames = $mapper->getServerNames();
                foreach($serverNames as $severName){
                    MultProcess->add( script/ $serverName)
                }

                return $serverStatusMapper->getAll();
            }
                
     // DB
            table: opvn_server_status 
            [index] [index] [index]
            server, region,  city     , user_total, dl_kbs, ul_kbs, , eth,   info (cup, memory),           ,modifyTime (Y-m-d:H:i:s)
            ca1   , canada,  vancouver, 300       , 2000     , eth0,  {"cpu":"90%","memory":"250MB"}, 2016-02-01:  
            ca2   , canada,  toronto  , 300       , 2000     , ens32, {"cpu":"90%","memory":"250MB"}  

            server, region,  city     , total_users, download  , upload  , download_avail, upload_avail , eth,   info (cup, memory),           , modifyTime (Y-m-d:H:i:s)
            ca1   , canada,  vancouver, 300        , 2000      , 3000    , 10000        , 10000       , eth0,  {"cpu":"90%","memory":"250MB"}, 2016-02-01:  
            ca2   , canada,  toroneto , 300        , 2000      , 3000    , 10000        , 10000       , eth0,  {"cpu":"90%","memory":"250MB"}, 2016-02-01:  
      // Note
      sshpass -p "YOUR_PASSWORD" ssh -o StrictHostKeyChecking=no YOUR_USERNAME@SOME_SITE.COM
        




